package com.greennext.solarestimater.repository;

import com.greennext.solarestimater.model.DailyEnergyGeneration;
import com.greennext.solarestimater.model.SolarPlant;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.time.LocalDate;
import java.util.List;

@Repository
public interface DailyEnergyGenerationRepository extends JpaRepository<DailyEnergyGeneration, Long> {

    // Find all records for a specific plant
    DailyEnergyGeneration findByPlantAndDate(SolarPlant plant, LocalDate date);
//
//    // Find records between date range for a plant
//    List<DailyEnergyGeneration> findByPlantPidAndDateBetweenOrderByDateDesc(
//        int plantId, LocalDate startDate, LocalDate endDate);
//
//    // Find record for a specific date and plant
//    DailyEnergyGeneration findByPlantPidAndDate(int plantId, LocalDate date);
//
//    // Get total energy generated by a plant between dates
//    @Query("SELECT SUM(d.energyGenerated) FROM DailyEnergyGeneration d " +
//           "WHERE d.plant.pid = :plantId AND d.date BETWEEN :startDate AND :endDate")
//    Double getTotalEnergyGenerated(
//        @Param("plantId") int plantId,
//        @Param("startDate") LocalDate startDate,
//        @Param("endDate") LocalDate endDate);
//
//    // Get average daily generation for a plant between dates
//    @Query("SELECT AVG(d.energyGenerated) FROM DailyEnergyGeneration d " +
//           "WHERE d.plant.pid = :plantId AND d.date BETWEEN :startDate AND :endDate")
//    Double getAverageDailyGeneration(
//        @Param("plantId") int plantId,
//        @Param("startDate") LocalDate startDate,
//        @Param("endDate") LocalDate endDate);
//
//    // Get peak generation day for a plant between dates
//    @Query("SELECT d FROM DailyEnergyGeneration d " +
//           "WHERE d.plant.pid = :plantId AND d.date BETWEEN :startDate AND :endDate " +
//           "ORDER BY d.energyGenerated DESC")
//    List<DailyEnergyGeneration> findPeakGenerationDays(
//        @Param("plantId") int plantId,
//        @Param("startDate") LocalDate startDate,
//        @Param("endDate") LocalDate endDate);
//
//    // Get records with efficiency below threshold
//    List<DailyEnergyGeneration> findByPlantPidAndEfficiencyLessThanOrderByDateDesc(
//        int plantId, Double efficiencyThreshold);
//
//    // Get average efficiency for a plant between dates
//    @Query("SELECT AVG(d.efficiency) FROM DailyEnergyGeneration d " +
//           "WHERE d.plant.pid = :plantId AND d.date BETWEEN :startDate AND :endDate")
//    Double getAverageEfficiency(
//        @Param("plantId") int plantId,
//        @Param("startDate") LocalDate startDate,
//        @Param("endDate") LocalDate endDate);
//
//    // Find days where actual generation deviated significantly from expected
//    List<DailyEnergyGeneration> findByPlantPidAndDeviationGreaterThanOrderByDeviationDesc(
//        int plantId, Double deviationThreshold);
}
